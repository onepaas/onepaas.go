// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "github.com/onepaas/onepaas/pkg/api/v1"
)

// ReadProjectReader is a Reader for the ReadProject structure.
type ReadProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewReadProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewReadProjectOK creates a ReadProjectOK with default headers values
func NewReadProjectOK() *ReadProjectOK {
	return &ReadProjectOK{}
}

/* ReadProjectOK describes a response with status code 200, with default header values.

OK
*/
type ReadProjectOK struct {
	Payload *models.Project
}

func (o *ReadProjectOK) Error() string {
	return fmt.Sprintf("[GET /v1/projects/{id}][%d] readProjectOK  %+v", 200, o.Payload)
}
func (o *ReadProjectOK) GetPayload() *models.Project {
	return o.Payload
}

func (o *ReadProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectNotFound creates a ReadProjectNotFound with default headers values
func NewReadProjectNotFound() *ReadProjectNotFound {
	return &ReadProjectNotFound{}
}

/* ReadProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ReadProjectNotFound struct {
	Payload *models.Problem
}

func (o *ReadProjectNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/projects/{id}][%d] readProjectNotFound  %+v", 404, o.Payload)
}
func (o *ReadProjectNotFound) GetPayload() *models.Problem {
	return o.Payload
}

func (o *ReadProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReadProjectInternalServerError creates a ReadProjectInternalServerError with default headers values
func NewReadProjectInternalServerError() *ReadProjectInternalServerError {
	return &ReadProjectInternalServerError{}
}

/* ReadProjectInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ReadProjectInternalServerError struct {
	Payload *models.Problem
}

func (o *ReadProjectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/projects/{id}][%d] readProjectInternalServerError  %+v", 500, o.Payload)
}
func (o *ReadProjectInternalServerError) GetPayload() *models.Problem {
	return o.Payload
}

func (o *ReadProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
